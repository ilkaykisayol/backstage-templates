apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: az-webapi-template
  title: C# WebApi Template
  description: Well, no description
  tags:
    - template
    - c#
    - microservices
    - webapi
spec:
  owner: default/engineering
  type: service
  parameters:
    - title: Choose a name
      required:
        - repoName
      properties:
        repoName:
          title: Repository name
          type: string
          description: The name of the app that will be visible in Backstage
          ui:field: EntityNamePicker
          ui:autofocus: true 
    - title: Choose a repository location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
            allowedOwners:
              - az-soft-eng
              - az-data-eng
    - title: Choose repository owner
      required:
        - repoOwner
      properties:
        repoOwner:
          title: Owner
          type: string
          description: Owner of the repo
          default: az-soft-eng/backstage-maintainers
          enum:
            - az-soft-eng/backstage-maintainers
    - title: Choose repository visibility
      required:
        - repoVisibility
      properties:
        repoVisibility:
          title: Visibility
          tpe: string
          description: Visibility of the repo
          default: internal
          enum:
            - internal
            - private
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./template
        values:
          name: ${{ parameters.repoName }}
          owner: ${{ parameters.repoOwner }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.repoName }} from template
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: ${{ parameters.repoVisibility }}
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
