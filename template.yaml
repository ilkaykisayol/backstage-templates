apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: github-action-trigger-template
  title: Github Action Trigger
  description: An example template for the scaffolder that trigger a simple Github Action
spec:
  type: service
  system: internal-dev-portal

  parameters:
    - title: Fill in some steps
      required:
        - name
        - logLevel
        - workflowId
        - printTag
        - tags
        - owner
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          ui:autofocus: true
          maxLength: 16
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*$'
        workflowId:
          title: Workflow Id
          type: string
          description: Id of Workflow
          maxLength: 16
          pattern: '^([a-zA-Z][a-zA-Z0-9]*)(-[a-zA-Z0-9]+)*.yml$'
        logLevel:
          title: Type
          type: string
          description: Type of the log level
          enum:
            - info
            - warning
            - debug
          enumNames:
            - info
            - warning
            - debug
        printTag:
          title: Print Tag
          type: boolean
        tags:
          title: Tags
          type: string
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  steps:
    - action: github:actions:dispatch
      id: trigger-build
      name: Trigger Build
      input:
        repoUrl: ${{ parameters.repoUrl }}
        workflowId: ${{ parameters.workflowId }}
        branchOrTagName: 'main'
        workflowInputs:
          logLevel: ${{ parameters.logLevel }}
          print_tags: ${{ parameters.printTag }}
          tags: ${{ parameters.tags }}

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
