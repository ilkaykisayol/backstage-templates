apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: on-demand-env-github-action
  title: On Demand Environment Github Action Template
  description: An template for trigger a Github Action that create on demand environment
spec:
  type: service
  system: internal-dev-portal

  parameters:
    - title: Fill The Steps
      required:
        - environmentName
        - environment
        - eksVersion
        - mongodbVersion

      properties:
        environmentName:
          title: Environment Name
          type: string
          description: Name of environment
          ui:autofocus: true
          maxLength: 5
          pattern: '^[a-z]{3}\d{2}$'
        environment:
          title: Environment
          type: string
          description: Environment
          enum:
            - 'snd'
            - 'dev'
        eksVersion:
          title: EKS Version
          type: string
          description: Version of EKS
          maxLength: 4
          pattern: '^\d.\d{2}$'
        mongodbVersion:
          title: MongoDB Version
          type: string
          description: Version of MongoDB
          maxLength: 3
          pattern: '^\d.\d{1}$'
        appVersion:
          title: Application Version
          type: string
          description: Version of application
          default: 'latest'
          enum:
            - 'boost-1.1'
            - 'boost-1.2'
            - 'latest'
          enumNames:
            - Boost 1.1
            - Boost 1.2
            - Latest
        ttl:
          title: Time To Live
          type: string
          default: '14'
          enum:
            - '7'
            - '14'
            - '28'
            - '56'
            - '70'
          enumNames:
            - 1 Week
            - 2 Weeks
            - 4 Weeks
            - 8 Weeks
            - 10 Weeks

  steps:
    - id: http-request
      action: http:backstage:request
      name: Run Workflow
      input:
        method: 'POST'
        path: '/proxy/github/repos/RDIT-DPS/devops-tfc-pipelines/dispatches'
        headers:
          content-type: 'application/json'
        body:
          event_type: backstage
          client_payload:
            aws_env: ${{ parameters.environment }}
            namespace: ${{ parameters.environmentName }}
            eks_version: ${{ parameters.eksVersion }}
            mongodb_version: ${{ parameters.mongodbVersion }}
            app_version: ${{ parameters.appVersion }}
            owner: ${{ user.entity.spec.profile.email }}

  output:
    links:
      - title: README
        url: https://github.com/RDIT-DPS
